/**
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * The version of the OpenAPI document: 47.0.0
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DeliveryOverviewFilterBy } from './deliveryOverviewFilterBy';
import { PaginationInput } from './paginationInput';

/**
 * Input of the Delivery Overview Source steps.
 */
export class GetDeliveryOverviewSourceMetricsBetaInput {
    /**
     * The sourceId for the Workspace.
     */
    'sourceId': string;
    /**
     * The id tied to a Workspace Destination.
     */
    'destinationConfigId'?: string;
    /**
     * The ISO8601 formatted timestamp corresponding to the beginning of the requested timeframe, inclusive.
     */
    'startTime': string;
    /**
     * The ISO8601 formatted timestamp corresponding to the end of the requested timeframe, noninclusive.
     */
    'endTime': string;
    /**
     * A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `eventName`, `eventType`, `discardReason`, and `appVersion`.
     */
    'groupBy'?: Array<string>;
    /**
     * The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past
     */
    'granularity': GetDeliveryOverviewSourceMetricsBetaInput.GranularityEnum;
    'filter'?: DeliveryOverviewFilterBy;
    'pagination': PaginationInput;
    /**
     * An optional filter for actions destinations, to filter by a specific action.
     */
    'subscriptionId'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }> = [
        {
            name: 'sourceId',
            baseName: 'sourceId',
            type: 'string',
        },
        {
            name: 'destinationConfigId',
            baseName: 'destinationConfigId',
            type: 'string',
        },
        {
            name: 'startTime',
            baseName: 'startTime',
            type: 'string',
        },
        {
            name: 'endTime',
            baseName: 'endTime',
            type: 'string',
        },
        {
            name: 'groupBy',
            baseName: 'groupBy',
            type: 'Array<string>',
        },
        {
            name: 'granularity',
            baseName: 'granularity',
            type: 'GetDeliveryOverviewSourceMetricsBetaInput.GranularityEnum',
        },
        {
            name: 'filter',
            baseName: 'filter',
            type: 'DeliveryOverviewFilterBy',
        },
        {
            name: 'pagination',
            baseName: 'pagination',
            type: 'PaginationInput',
        },
        {
            name: 'subscriptionId',
            baseName: 'subscriptionId',
            type: 'string',
        },
    ];

    static getAttributeTypeMap() {
        return GetDeliveryOverviewSourceMetricsBetaInput.attributeTypeMap;
    }
}

export namespace GetDeliveryOverviewSourceMetricsBetaInput {
    export enum GranularityEnum {
        day = <any>'day',
        hour = <any>'hour',
        minute = <any>'minute',
    }
}
